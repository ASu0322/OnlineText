{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/config.js","webpack:///external \"express\"","webpack:///external \"joi\"","webpack:///external \"mysql\"","webpack:///./src/config/express.js","webpack:///external \"jsonwebtoken\"","webpack:///external \"body-parser\"","webpack:///external \"path\"","webpack:///external \"cors\"","webpack:///external \"morgan\"","webpack:///external \"cookie-parser\"","webpack:///external \"ws\"","webpack:///./src/server/modules/login.module.js","webpack:///./src/server/modules/jwt.module.js","webpack:///./src/server/controllers/login.controller.js","webpack:///./src/server/routes/login.route.js","webpack:///./src/server/modules/register.module.js","webpack:///./src/server/controllers/register.controller.js","webpack:///./src/server/routes/register.route.js","webpack:///./src/server/controllers/mainPage.controller.js","webpack:///./src/server/routes/mainPage.route.js","webpack:///./src/server/routes/verification.route.js","webpack:///./src/server/modules/message.module.js","webpack:///./src/server/controllers/chatMessage.controller.js","webpack:///./src/server/routes/file.route.js","webpack:///./src/server/routes/index.route.js","webpack:///./src/index.js","webpack:///external \"dotenv\"","webpack:///external \"http\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","config","envVarSchema","Joi","keys","NODE_ENV","string","default","allow","PORT","number","MYSQL_PORT","MYSQL_HOST","MYSQL_USER","MYSQL_PASS","MYSQL_NAME","VERSION","unknown","required","error","envVars","validate","process","env","Error","message","version","port","mysqlPort","mysqlHost","mysqlUserName","mysqlPass","mysqlDatabase","MYSQL_DATABASE","app","express","use","bodyParser","json","urlencoded","extended","cookieParser","cors","morgan","set","upload","req","res","console","log","body","send","index","static","path","join","__dirname","status","render","connectionPool","mysql","createPool","connection","host","user","password","database","insertValues","Promise","resolve","reject","getConnection","connectionError","query","user_account","result","user_password","release","token","jwt","verify","err","payload","sign","_id","toString","expiresIn","cookie","maxAge","httpOnly","secure","accountModule","then","jwtModule","catch","redirect","success","router","Router","post","loginCtrl","registerCtrl","cookies","RoomID","mainPageCtrl","JSON","stringify","chatMessageCtrl","login","register","mainPage","verification","file","server","createServer","wss","SocketServer","Server","on","ws","data","listen"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/* config.js */\r\nimport Joi from 'joi'\r\n\r\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\r\nrequire('dotenv').config()\r\n\r\n// 建立每個變數 joi 驗證規則\r\nconst envVarSchema = Joi.object().keys({\r\n    NODE_ENV: Joi.string().default('development').allow(['development', 'production']), // 字串且預設值為development 並只允許兩種參數\r\n    PORT: Joi.number().default(8080), // 數字且預設值為 8080\r\n    MYSQL_PORT: Joi.number().default(3306), //數字且預設值為3306\r\n    MYSQL_HOST: Joi.string().default('127.0.0.1'), //字串取預設值為127.0.0.1\r\n    MYSQL_USER: Joi.string(), // 字串\r\n    MYSQL_PASS: Joi.string(), // 字串\r\n    MYSQL_NAME: Joi.string(), // 字串\r\n    VERSION: Joi.string() // 字串\r\n}).unknown().required()\r\n\r\n// process.env 撈取 .env 內的變數做 joi 驗證\r\nconst { error, value: envVars } = Joi.validate( process.env, envVarSchema)\r\n\r\nif (error) {\r\n    throw new Error(`Config validation error: ${error.message}`)\r\n}\r\n\r\nconst config = {\r\n    version: envVars.VERSION, // 版本\r\n    env: envVars.NODE_ENV,  // 開發模式\r\n    port: envVars.PORT,// API 阜號\r\n    mysqlPort: envVars.MYSQL_PORT, // 連接阜號(MYSQL_PORT)\r\n    mysqlHost: envVars.MYSQL_HOST, // 主機名稱 (MYSQL_HOST)\r\n    mysqlUserName: envVars.MYSQL_USER, // 用戶名稱 (MYSQL_USER)\r\n    mysqlPass: envVars.MYSQL_PASS, // 資料庫密碼(MYSQL_PASS)\r\n    mysqlDatabase: envVars.MYSQL_DATABASE  // 阜號\r\n}\r\n\r\nexport default config  // 匯出共用","module.exports = require(\"express\");","module.exports = require(\"joi\");","module.exports = require(\"mysql\");","/* express.js */\r\nimport express from 'express';\r\nimport config from './config';\r\nimport index from '../server/routes/index.route';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors'\r\nimport morgan from 'morgan'\r\nimport path from 'path'\r\nimport cookieParser from 'cookie-parser'\r\n\r\nconst app = express()\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(cookieParser())\r\napp.use(cors())\r\napp.use(morgan('dev'))\r\n\r\napp.set('views', './views')\r\napp.set(\"view engine\", \"jade\")\r\n\r\n/* GET home page. */\r\napp.upload = function (req, res) {\r\n    console.log(req.body)\r\n    //{ user: 'qiangzi' }\r\n};\r\napp.get('/', (req, res) => {\r\n    res.send(`server started express on  port http://127.0.0.1:${config.port} (${config.env})`)\r\n})\r\napp.use('/OnlineText', index)\r\n\r\napp.use(express.static(path.join(path.join(__dirname, 'OnlineText'), 'public')));\r\n\r\n\r\napp.use(function (req, res) {\r\n    res.status(404).render('404page')\r\n})\r\n\r\nexport default app","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"body-parser\");","module.exports = require(\"path\");","module.exports = require(\"cors\");","module.exports = require(\"morgan\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"ws\");","import mysql from 'mysql'\r\nimport config from '../../config/config'\r\n\r\nconst connectionPool = mysql.createPool({\r\n    connection: 10,\r\n    host: config.mysqlHost,\r\n    user: config.mysqlUserName,\r\n    password: config.mysqlPass,\r\n    database: config.mysqlDatabase\r\n})\r\n\r\nconst checkAccount = (insertValues) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n            if (connectionError) {\r\n                reject(connectionError)\r\n            } else {\r\n                // connection.query('insert INTO Account SET ?', insertValues, (error, result) => {\r\n                connection.query('Select user_password From account Where user_account = ?', insertValues.user_account, (error, result) => {\r\n                    if (error) {\r\n\r\n                        console.error('SQL error:', error)\r\n                        reject(error)\r\n\r\n                    } else if (result[0].user_password === insertValues.user_password) {\r\n\r\n                        // console.log(insertValues)\r\n                        resolve(\"success login\");\r\n\r\n                    } else {\r\n\r\n                        resolve(\"fail login\");\r\n\r\n                    }\r\n                })\r\n                connection.release()\r\n            }\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport default {\r\n    checkAccount\r\n}","import jwt from 'jsonwebtoken'\n\nconst SECRET = 'thisismynewproject'\nconst expires = 1000 * 1000\n\nconst jwtVerify = (token)=>{\n\n    return new Promise((resolve, reject)=>{\n\n        jwt.verify(token, SECRET, (err, payload) =>{\n            if(err){\n                resolve(\"Unverify\");\n            }else{\n                resolve(\"Verify\");\n            }\n        })\n    })\n    \n}\n\nconst jwtSetCookie = (user_account, res)=>{\n\n    return new Promise((resolve, reject)=>{\n\n        const token = jwt.sign({ _id: user_account.toString() }, SECRET, { expiresIn: '1 day' })\n        res.cookie('token', token, { maxAge: expires, httpOnly: true, secure: false })\n        resolve(\"CookieSet\");\n\n    })\n\n}\n\nexport default{\n    jwtVerify,\n    jwtSetCookie\n}","import accountModule from '../modules/login.module'\r\nimport jwtModule from '../modules/jwt.module'\r\n\r\nconst loginPost = (req, res) => {\r\n\r\n    const insertValues = req.body\r\n\r\n    accountModule.checkAccount(insertValues).then((result) => {\r\n\r\n        if (result === \"success login\") {\r\n\r\n            jwtModule.jwtSetCookie(insertValues.user_account, res).then((result) => {\r\n\r\n            }).catch((err) => {\r\n\r\n                res.send(err)\r\n\r\n            })\r\n\r\n            res.redirect('mainPage');\r\n\r\n        } else if (result === \"fail login\") {\r\n\r\n            res.render(\"Login\", {\r\n                success: false\r\n            })\r\n\r\n        }\r\n\r\n    }).catch((err) => {\r\n\r\n        res.send(err)\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\nconst loginGet = (req, res) => {\r\n\r\n    const token = req.cookies;\r\n    jwtModule.jwtVerify(token).then((result) => {\r\n\r\n        if (result === \"Verify\") {\r\n\r\n            res.redirect('mainPage')\r\n\r\n        } else if (result === \"Unverify\") {\r\n\r\n            res.redirect('Login')\r\n\r\n        } else {\r\n\r\n            res.redirect('Login')\r\n\r\n        }\r\n\r\n    }).catch((err) => {\r\n\r\n        res.send(err)\r\n\r\n    })\r\n\r\n}\r\n\r\nexport default {\r\n    loginPost,\r\n    loginGet\r\n}","import express from 'express'\r\nimport loginCtrl from '../controllers/login.controller'\r\nconst router = express.Router()\r\n\r\n// router.route('/').post(loginCtrl.loginPost)\r\n\r\nrouter.post('/',(req, res)=>{\r\n    loginCtrl.loginPost(req, res)\r\n})\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Login')\r\n})\r\n\r\n\r\nexport default router","import mysql from 'mysql'\r\nimport config from '../../config/config'\r\n\r\nconst connectionPool = mysql.createPool({\r\n    connection: 10,\r\n    host: config.mysqlHost,\r\n    user: config.mysqlUserName,\r\n    password: config.mysqlPass,\r\n    database: config.mysqlDatabase\r\n})\r\n\r\nconst createAccount = (insertValues) => {\r\n    return new Promise((resolve, reject) => {\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n            if (connectionError) {\r\n                reject(connectionError)\r\n            } else {\r\n                connection.query('insert INTO Account SET ?', {\r\n                    user_account: insertValues.user_account,\r\n                    user_password: insertValues.user_password,\r\n                }, (error, result) => {\r\n                    if (error) {\r\n\r\n                        console.error('SQL error:', error)\r\n                        reject(error)\r\n\r\n                    } else {\r\n\r\n                        resolve(`success register`)\r\n\r\n                    }\r\n                })\r\n                connection.release()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport default {\r\n    createAccount\r\n}","import accountModule from '../modules/register.module'\r\n\r\nconst registerPost = (req, res) => {\r\n    const insertValues = req.body\r\n\r\n    accountModule.createAccount(insertValues).then((result) => {\r\n        if (result === 'success register') {\r\n\r\n            res.redirect('verification')\r\n\r\n        }\r\n\r\n    }).catch((err) => {\r\n\r\n        res.send(err)\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\nexport default {\r\n    registerPost\r\n}","import express from 'express'\r\nimport registerCtrl from '../controllers/register.controller'\r\n\r\nconst router = express.Router()\r\n\r\n\r\n// router.route('/').post(registerCtrl.registerPost)\r\n\r\nrouter.post('/', (req, res) => {\r\n    registerCtrl.registerPost(req, res)\r\n})\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Register')\r\n})\r\n\r\nexport default router","import jwtModule from '../modules/jwt.module'\r\n\r\nconst mainPageGet = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n    jwtModule.jwtVerify(token).then((result) => {\r\n\r\n        if (result === \"Verify\") {\r\n\r\n            res.render('RoomInput')\r\n\r\n        } else if (result === \"Unverify\") {\r\n\r\n            res.redirect('login')\r\n\r\n        } else {\r\n\r\n            res.redirect('login')\r\n\r\n        }\r\n\r\n    }).catch((err) => {\r\n\r\n        res.send(err)\r\n\r\n    })\r\n\r\n}\r\n\r\nconst mainPagePost = (req, res) => {\r\n    const token = req.cookies.token;\r\n    jwtModule.jwtVerify(token).then((result) => {\r\n\r\n        if (result === \"Verify\") {\r\n\r\n            const RoomID = req.body.RoomID\r\n            res.render('ChatTest', {\r\n                RoomID: RoomID\r\n            })\r\n\r\n        } else if (result === \"Unverify\") {\r\n\r\n            res.redirect('login')\r\n\r\n        } else {\r\n\r\n            res.redirect('login')\r\n\r\n        }\r\n\r\n    }).catch((err) => {\r\n\r\n        res.send(err)\r\n\r\n    })\r\n\r\n}\r\n\r\nexport default {\r\n    mainPageGet,\r\n    mainPagePost\r\n}","import express from 'express'\r\nimport mainPageCtrl from '../controllers/mainPage.controller'\r\n\r\nconst router = express.Router()\r\n\r\n// router.route('/').post(mainPageCtrl.mainPagePost)\r\n\r\nrouter.post('/', (req, res) => {\r\n\r\n    mainPageCtrl.mainPagePost(req ,res)\r\n})\r\n\r\nrouter.get('/', (req, res) => {\r\n\r\n    mainPageCtrl.mainPageGet(req, res)\r\n\r\n})\r\n\r\n\r\n\r\nexport default router","import express from 'express'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Verification')\r\n})\r\nexport default router","import mysql from 'mysql'\r\nimport config from '../../config/config'\r\n\r\nconst connectionPool = mysql.createPool({\r\n    connection: 10,\r\n    host: config.mysqlHost,\r\n    user: config.mysqlUserName,\r\n    password: config.mysqlPass,\r\n    database: config.mysqlDatabase\r\n})\r\n\r\nconst getChatPreloadMessage = (insertValues) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n            if (connectionError) {\r\n                reject(connectionError)\r\n            } else {\r\n                connection.query('Select user_password From account Where user_account = ?', insertValues.user_account, (error, result) => {\r\n                    if (error) {\r\n\r\n                        console.error('SQL error:', error)\r\n                        reject(error)\r\n\r\n                    } else if (result[0].user_password === insertValues.user_password) {\r\n                        \r\n                        resolve(\"success login\");\r\n\r\n                    } else {\r\n\r\n                        resolve(\"fail login\");\r\n\r\n                    }\r\n                })\r\n                connection.release()\r\n            }\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport default {\r\n    getChatPreloadMessage\r\n}","import messageModule from '../modules/message.module'\r\nconst messageCtrl = (req, res) => {\r\n    var josn = {\r\n        \"data\": {\r\n            \"message\": [\r\n                {\r\n                    \"data\": \"1\",\r\n                    \"RoomID\": 123\r\n                },\r\n                {\r\n                    \"data\": \"2\",\r\n                    \"RoomID\": 123\r\n                },\r\n                {\r\n                    \"data\": \"3\",\r\n                    \"RoomID\": 123\r\n                },\r\n                {\r\n                    \"data\": \"4\",\r\n                    \"RoomID\": 123\r\n                },\r\n                {\r\n                    \"data\": \"5\",\r\n                    \"RoomID\": 123\r\n                }\r\n            ]\r\n        },\r\n        \"messageLength\": 5\r\n    }\r\n    res.send(JSON.stringify(josn))\r\n}\r\n\r\nexport default {\r\n    messageCtrl\r\n}","import express from 'express'\r\nimport chatMessageCtrl from '../controllers/chatMessage.controller'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/chatMessage/:chatRoom', function (req, res) {\r\n    chatMessageCtrl.messageCtrl(req, res)\r\n})\r\n\r\nexport default router","import express from 'express'\r\nimport login from './login.route'\r\nimport register from './register.route'\r\nimport mainPage from './mainPage.route'\r\nimport verification from './verification.route'\r\nimport file from './file.route'\r\n\r\n\r\nconst router = express.Router()\r\n\r\n/* GET localhost:[port]/api page. */\r\n// router.get('/', (req, res) => {\r\n//     res.send(`此路徑是: losdfsfdfcalhost:${config.port}/api`)\r\n// })\r\n\r\nrouter.use('/login', login)\r\nrouter.use('/register', register)\r\nrouter.use('/mainPage', mainPage)\r\nrouter.use('/verification', verification)\r\nrouter.use('/file', file)\r\n\r\n\r\nexport default router","import config from './config/config'\r\nimport app from './config/express'\r\nimport SocketServer from 'ws'\r\n\r\nconst server = require('http').createServer(app);\r\nconst wss = new SocketServer.Server({ server: server })\r\n\r\nwss.on('connection', ws => {\r\n\r\n    console.log('Client connected')\r\n    \r\n    ws.on('message', data => {\r\n        ws.send(data)\r\n    })\r\n\r\n    ws.on('close', () => {\r\n\r\n        console.log('Close connected')\r\n\r\n    })\r\n})\r\n\r\nserver.listen(config.port, () => {\r\n    console.log(`server started on port http://127.0.\r\n    0.1:${config.port} (${config.env})`)\r\n})\r\n// if (!module.parent) {\r\n\r\n// }\r\n\r\nexport default\r\n    { app, wss };","module.exports = require(\"dotenv\");","module.exports = require(\"http\");"],"sourceRoot":""}